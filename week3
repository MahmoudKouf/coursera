## Put comments here that give an overall description of what your
## functions do

## Returns a matrix with extra functionality which allows calculating the
## inverse of the matrix and caches the result.

cachematrix<- function(x = matrix()) {
        I <- NULL
        S<- function(y) { x <- y
                   inv <- NULL
        }
        G <- function() x
        setI <- function(Inv) I <- Inv
        GI <- function() I
        list(S = S,
             G = G,
             setI = setI,
             GI = GI)
}
## Takes a cached matrix and fetches the cached inversion if one exists or
## otherwise it calculates the inverse and caches the result.

cachesolve <- function(x, ...) {
        inv <- x$GI()
        if (!is.null(I)) {
                message(" cached data")
                return(I)
        }
        mat <- x$get()
        inv <- solve(mat, ...)
        x$setInverse(I)
        I
}
